package GUI;

import app.LogServices;


import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.*;
import java.time.LocalDate;
import java.util.Locale;

import static app.Application.getArbttLog;
import static app.Application.writeHTML;

public class InputGUI extends JFrame implements ActionListener {
  private JPanel mainPanel;
  private JLabel title;
  private JButton button;
  private JComboBox<Integer> comboBox;

  public InputGUI() {
    setContentPane( mainPanel );
    setTitle( "Arbtt-Plus" );
    comboBox.addItem( 3 );
    comboBox.addItem( 5 );
    comboBox.addItem( 7 );
    comboBox.addItem( 15 );
    comboBox.addItem( 30 );
    setSize( 310, 150 );
    button.addActionListener( this::actionPerformed );
    setDefaultCloseOperation( WindowConstants.EXIT_ON_CLOSE );
    setVisible( true );
  }

  @Override public void actionPerformed( ActionEvent e ) {
    if ( e.getSource() == button ) {
      var logService = new LogServices( getArbttLog() );
      int days = (int) comboBox.getSelectedItem();
      writeHTML( "stats-for-last-%d-days-from-".formatted( days ) + LocalDate.now() + ".html",
                 logService, days );
      dispose();
    }
  }

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    mainPanel = new JPanel();
    mainPanel.setLayout(
        new com.intellij.uiDesigner.core.GridLayoutManager( 3, 3, new Insets( 0, 0, 0, 0 ), -1, -1,
                                                            false, true ) );
    mainPanel.setBackground( new Color( -7629668 ) );
    mainPanel.setEnabled( true );
    Font mainPanelFont = this.$$$getFont$$$( "Consolas", Font.BOLD | Font.ITALIC, 12,
                                             mainPanel.getFont() );
    if ( mainPanelFont != null )
      mainPanel.setFont( mainPanelFont );
    mainPanel.setMaximumSize( new Dimension( 310, 150 ) );
    mainPanel.setMinimumSize( new Dimension( 310, 150 ) );
    mainPanel.setOpaque( false );
    mainPanel.setPreferredSize( new Dimension( 310, 150 ) );
    mainPanel.setBorder( BorderFactory.createTitledBorder( BorderFactory.createEtchedBorder(), null,
                                                           TitledBorder.CENTER, TitledBorder.TOP,
                                                           this.$$$getFont$$$( "Consolas",
                                                                               Font.BOLD, 11,
                                                                               mainPanel.getFont() ),
                                                           new Color( -16777216 ) ) );
    title = new JLabel();
    title.setText( "how many days you want to go back ?" );
    mainPanel.add( title, new com.intellij.uiDesigner.core.GridConstraints( 0, 0, 1, 3,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false ) );
    button = new JButton();
    button.setOpaque( false );
    button.setText( "Send" );
    mainPanel.add( button, new com.intellij.uiDesigner.core.GridConstraints( 2, 0, 1, 3,
                                                                             com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST,
                                                                             com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                             com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                             com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                             null, null, null, 0,
                                                                             false ) );
    comboBox = new JComboBox();
    comboBox.setAutoscrolls( false );
    comboBox.setOpaque( false );
    mainPanel.add( comboBox, new com.intellij.uiDesigner.core.GridConstraints( 1, 0, 1, 1,
                                                                               com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH,
                                                                               com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                               null,
                                                                               new Dimension( 50,
                                                                                              -1 ),
                                                                               null, 0, false ) );
    title.setLabelFor( comboBox );
  }

  /**
   * @noinspection ALL
   */
  private Font $$$getFont$$$( String fontName, int style, int size, Font currentFont ) {
    if ( currentFont == null )
      return null;
    String resultName;
    if ( fontName == null ) {
      resultName = currentFont.getName();
    }
    else {
      Font testFont = new Font( fontName, Font.PLAIN, 10 );
      if ( testFont.canDisplay( 'a' ) && testFont.canDisplay( '1' ) ) {
        resultName = fontName;
      }
      else {
        resultName = currentFont.getName();
      }
    }
    Font font = new Font( resultName, style >= 0 ? style : currentFont.getStyle(),
                          size >= 0 ? size : currentFont.getSize() );
    boolean isMac = System.getProperty( "os.name", "" ).toLowerCase( Locale.ENGLISH )
        .startsWith( "mac" );
    Font fontWithFallback = isMac ?
                            new Font( font.getFamily(), font.getStyle(), font.getSize() ) :
                            new StyleContext().getFont( font.getFamily(), font.getStyle(),
                                                        font.getSize() );
    return fontWithFallback instanceof FontUIResource ?
           fontWithFallback :
           new FontUIResource( fontWithFallback );
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {return mainPanel;}
}